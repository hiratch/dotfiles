# $ZUSRDIR/functions
#
echo "Loading $ZUSRDIR/functions"

# csh 系の setenv をエミュレートする
# shell> setenv
function setenv() {
    ev=$1
    shift
    export $ev="$*"
}

# ネットワーク環境で良く使う X の DISPLAY の設定を「disp ホスト名」一発で
function disp() {
    export DISPLAY="$*:0.0"
}

# ps の出力の中から特定の文字列を検索する
# shell> psgrep mysql
function psgrep() {
    case $SYSTEM {
        sun)
            echo "USER       PID %CPU %MEM   SZ  RSS TT STAT START  TIME COMMAND"
            ps auxw | grep $* ;;
        sol)
            echo "USER       PID %CPU %MEM   SZ  RSS TT       S    START  TIME COMMAND"
            \ps -auwx | grep $* ;;
        sgi)
            echo "     UID   PID  PPID  C    STIME TTY     TIME CMD"
            ps -ef | grep $* ;;
        gnu)
            echo "USER       PID %CPU %MEM  SIZE   RSS TTY STAT START   TIME COMMAND"
            ps auxw | grep -v grep | grep $* ;;
        bsd)
            echo "USER       PID %CPU %MEM   VSZ  RSS  TT  STAT STARTED       TIME COMMAND"
            ps -auxww | grep -v grep | grep $* ;;
        mac)
            echo "USER     PID %CPU %MEM      VSZ    RSS  TT  STAT STARTED      TIME COMMAND"
            ps -auxwww | grep -v grep | grep $* ;;
        *)
            ps auxw | grep $* ;;
    }
}

# ls grep
# shell> lsgrep conf
function lsgrep() {
    ls -1 | grep $* | xargs ls -la
}

# ll
function lls () {
    ls -lAFo $1 | ${PAGER}
}

function hisgrep() {
    history -1000 | grep $1 | grep -v 'hisgrep'
}

# ffmpeg: create comparison video
function ffmpeg_cmp() {
    if [ $# = 3 ]; then
        ffmpeg -i $1 -i $2 -filter_complex "
                [0:0]pad=2*iw:ih[a];
                [a][1:0]overlay=w[b];
                [b]scale=iw/2:ih/2
                " -vsync passthrough $3
    else
        echo "usage:"
        echo "ffmpeg_cmp <input file1> <input_file2> <output file>"
        echo "ex) ffmpeg_cmp input1.mp4 input2.mp4 output.mp4"
    fi
}

function ffmpeg_extract() {
    if [ $# = 2 ]; then
        ffmpeg -i $1 -q:v 0 -vsync passthrough -f image2 $2
    else
        echo "usage:"
        echo "ffmpeg_extract <input file> <output files>"
        echo "ex) ffmpeg_extract input.mp4 jpg/frame%05d.jpg"
    fi
}

function ffmpeg_extract_rot90() {
    if [ $# = 2 ]; then
        ffmpeg -i $1 -vf transpose=2 -q:v 0 -vsync passthrough -f image2 $2
    else
        echo "usage:"
        echo "ffmpeg_extract_rot90 <input file> <output files>"
        echo "ex) ffmpeg_extract_rot90 input.mp4 jpg/frame%05d.jpg"
    fi
}

function ffmpeg_extract_rot180() {
    if [ $# = 2 ]; then
        ffmpeg -i $1 -vf hflip,vflip -q:v 0 -vsync passthrough -f image2 $2
    else
        echo "usage:"
        echo "ffmpeg_extract_rot180 <input file> <output files>"
        echo "ex) ffmpeg_extract input.mp4 jpg/frame%05d.jpg"
    fi
}

function ffmpeg_extract_rot270() {
    if [ $# = 2 ]; then
        ffmpeg -i $1 -vf transpose=1 -q:v 0 -vsync passthrough -f image2 $2
    else
        echo "usage:"
        echo "ffmpeg_extract_rot270 <input file> <output files>"
        echo "ex) ffmpeg_extract input.mp4 jpg/frame%05d.jpg"
    fi
}


function ffmpeg_compose() {
    if [ $# = 3 ]; then
        ffmpeg -r $1 -i $2 -q:v 0 $3
    else
        echo "usage:"
        echo "ffmpeg_compose <frame rate(floating num)> <input files> <output_file>"
        echo "ex) ffmpeg_compose 29.97 input/%05d.jpg out.mp4"
    fi
}

function ffmpeg_compose_rot90() {
    if [ $# = 3 ]; then
        ffmpeg -r $1 -i $2 -vf transpose=2 -q:v 0 $3
    else
        echo "usage:"
        echo "ffmpeg_compose_rot90 <frame rate(floating num)> <input files> <output_file>"
        echo "ex) ffmpeg_compose 29.97 input/%05d.jpg out.mp4"
    fi
}

function ffmpeg_compose_rot180() {
    if [ $# = 3 ]; then
        ffmpeg -r $1 -i $2 -vf hflip,vflip -q:v 0 $3
    else
        echo "usage:"
        echo "ffmpeg_compose_rot180 <frame rate(floating num)> <input files> <output_file>"
        echo "ex) ffmpeg_compose 29.97 input/%05d.jpg out.mp4"
    fi
}

function ffmpeg_compose_rot270() {
    if [ $# = 3 ]; then
        ffmpeg -r $1 -i $2 -vf transpose=1 -q:v 0 $3
    else
        echo "usage:"
        echo "ffmpeg_compose_rot270 <frame rate(floating num)> <input files> <output_file>"
        echo "ex) ffmpeg_compose 29.97 input/%05d.jpg out.mp4"
    fi
}


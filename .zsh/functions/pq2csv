# Parquet to CSV conversion function using duckdb
#
# Usage: pq2csv <input.parquet> [output.csv]
#   -h, --help: Show help message.

function pq2csv() {
  _pq2csv_help() {
    cat <<EOF
Usage: pq2csv <input.parquet> [output.csv]

Converts a Parquet file to a CSV file using duckdb.

Arguments:
  input.parquet   The path to the input Parquet file.
  output.csv      (Optional) The path for the output CSV file.
                  If not provided, the output will be saved as the input filename with a .csv extension.

Options:
  -h, --help      Show this help message and exit.
EOF
  }

  # Check for help option
  if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    _pq2csv_help
    return 0
  fi

  # Check for duckdb command
  if ! command -v duckdb &> /dev/null; then
    echo "Error: duckdb command not found." >&2
    echo "Please install duckdb first. (e.g., 'brew install duckdb')" >&2
    return 1
  fi

  # Validate arguments
  if [[ $# -eq 0 ]] || [[ $# -gt 2 ]]; then
    _pq2csv_help >&2
    return 1
  fi

  local input_file="$1"
  local output_file

  if [[ $# -eq 2 ]]; then
    output_file="$2"
  else
    # :r is a zsh modifier to remove the extension
    output_file="${input_file:r}.csv"
  fi

  if [[ ! -f "$input_file" ]]; then
      echo "Error: Input file not found: $input_file" >&2
      return 1
  fi

  echo "Converting '${input_file}' to '${output_file}'..."
  duckdb -c "COPY (SELECT * FROM read_parquet('${input_file}')) TO '${output_file}' (HEADER, DELIMITER ',');"

  if [[ $? -eq 0 ]]; then
    echo "Successfully created '${output_file}'."
  else
    echo "Failed to convert the file." >&2
    return 1
  fi
}
